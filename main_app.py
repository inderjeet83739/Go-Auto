# -*- coding: utf-8 -*-
"""main_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13joI7A_RBErSlsbGSfDKeoZfl-eCezm9
"""

!pip install streamlit==1.25.0 pyngrok --quiet

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import pandas as pd
# import joblib
# 
# # Set page settings
# st.set_page_config(page_title="Vehicle Mileage Predictor", layout="wide")
# 
# # Load model dictionary
# models = joblib.load("final_xgb_models.pkl")
# 
# # --- Sidebar ---
# st.sidebar.title("🚗 Select Vehicle Type")
# vehicle_type = st.sidebar.radio("Choose:", ["Used", "New"])
# model = models["used_model"] if vehicle_type == "Used" else models["new_model"]
# 
# # Define expected features
# expected_features = [
#     'price',
#     'model_year',
#     'make',
#     'model',
#     'series',
#     'style',
#     'wheelbase_from_vin',
#     'drivetrain_from_vin',
#     'engine_from_vin',
#     'transmission_from_vin',
#     'fuel_type_from_vin'
# ]
# 
# # Load reference dataset for dropdown options
# df = pd.read_csv("cleaneddataset.csv")
# 
# # --- Header ---
# st.markdown("<h1 style='text-align: center; color: #4CAF50;'>🚙 Vehicle Mileage Group Predictor</h1>", unsafe_allow_html=True)
# st.markdown("### 📋 Please fill out the vehicle information below:")
# 
# # --- Input Form ---
# col1, col2 = st.columns(2)
# 
# with col1:
#     price = st.number_input("💰 Price", min_value=0, value=25000)
#     model_year = st.slider("📅 Model Year", int(df["model_year"].min()), int(df["model_year"].max()), 2018)
#     make = st.selectbox("🏷️ Make", df["make"].dropna().unique())
#     model_input = st.selectbox("🆔 Model", df["model"].dropna().unique())
#     series = st.selectbox("🔖 Series", df["series"].dropna().unique())
# 
# with col2:
#     style = st.selectbox("🚘 Style", df["style"].dropna().unique())
#     wheelbase = st.number_input("📏 Wheelbase (inches)", min_value=50, value=100)
#     drivetrain = st.selectbox("⚙️ Drivetrain", df["drivetrain_from_vin"].dropna().unique())
#     engine = st.text_input("🛠️ Engine (e.g., 2.0L I4)", "2.0L I4")
#     transmission = st.selectbox("🔄 Transmission", df["transmission_from_vin"].dropna().unique())
#     fuel_type = st.selectbox("⛽ Fuel Type", df["fuel_type_from_vin"].dropna().unique())
# 
# # --- Predict Button ---
# st.markdown("---")
# if st.button("🔍 Predict Mileage Group"):
#     input_df = pd.DataFrame([{
#         'price': price,
#         'model_year': model_year,
#         'make': make,
#         'model': model_input,
#         'series': series,
#         'style': style,
#         'wheelbase_from_vin': wheelbase,
#         'drivetrain_from_vin': drivetrain,
#         'engine_from_vin': engine,
#         'transmission_from_vin': transmission,
#         'fuel_type_from_vin': fuel_type
#     }])
# 
#     input_df = input_df[expected_features]
#     prediction = model.predict(input_df)[0]
#     label_map = {0: "Low", 1: "Medium", 2: "High"}
#     st.success(f"🎯 Predicted Mileage Group: **{label_map[prediction]}** ({vehicle_type} Vehicle)")
# 
# # --- Footer: Team Info ---
# st.markdown("---")
# st.markdown("""
#     <div style='text-align: center;'>
#         <h4 style='color: #555;'>Made with ❤️ by <strong>Team ML Champs</strong></h4>
#         <p>👤 Inderjeet Singh &nbsp; | &nbsp; 👤 Aditya Mehta &nbsp; | &nbsp; 👤 Ishmeet Singh &nbsp; | &nbsp; 👤 Harvir Kaur</p>
#     </div>
# """, unsafe_allow_html=True)

from pyngrok import ngrok

# Replace with your actual auth token
!ngrok config add-authtoken 2vqS3RzLl8HplYsxNT7GpeX22pj_6BTCR3CtKtotayfcFUYRP

import time
from pyngrok import ngrok

# Kill previous tunnels (just in case)
ngrok.kill()

# Start Streamlit app in the background
get_ipython().system_raw('streamlit run app.py &')

# Create tunnel
public_url = ngrok.connect(8501)
print("Streamlit app is live at:", public_url)

# Wait a few seconds to make sure app is up
time.sleep(5)